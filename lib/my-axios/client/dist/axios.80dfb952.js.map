{"version":3,"sources":["../utils/deepCopy.js","../axios/intercepter.js","../axios/classAxios.js","../axios/config.js","../axios/index.js","../index.js"],"names":["deepClone","obj","target","Array","isArray","key","hasOwnProperty","mergeConfig","baseConfig","instanceConfig","baseConf","instanceConf","Object","keys","reduce","prev","includes","assign","Intercepter","handlers","resHandler","rejHandler","push","Axios","config","defaultsConfigs","intercepter","request","response","url","assginConfigs","promise","Promise","resolve","forEach","handler","then","undefined","res","rej","xhr","XMLHttpRequest","onload","statusCode","statusText","data","responseText","open","baseUrl","send","method","headers","axios","use","console","log","get"],"mappings":";;AKGA;;;;AFHA,AEAA,IFAMwB,MAAM,GAAG;ADAf,ACCIwB,ACDJ,ACCA,EFAIA,OAAO,EAAE,EADE;AAEXnB,AEAJ,EFAIA,GAAG,EAAE,EAFM;ADCf,ACEIqB,ACFJ,ACIAE,ALLO,EGGHF,EHHSlD,IGGH,EAAE,GHHU,EGAP,AEKT0B,CLLmB,SAAZ1B,CKKb,CAAkB2B,OAAlB,ALLyB,CKKC0B,ALLSpD,GKKnC,ALLyB,CKKK,CLLU,SKKAuB,MAAV,EAAkB;AFD5C2B,AEEA,ALLA,EGGAA,IHHIjD,GGGG,AEEAsB,EFFE,CHHC,GKKV,ALLarB,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,EAArB,GAA0B,EAAvC;AGII,AEEP,CAFD,EAEG,YAAY,KFFS;AADX,AEITqD,ALLA,EKKAA,KLLK,EKKE,CAACC,CLLClD,EKKT,CAAY,ALLZ,IAAgBJ,GAAhB,EAAqB,yBKKrB;AFRW,ACEf,ACOC,ALLO,CGJR,AEKA,GDHMmD,AHFelC,IDITjB,CIFD,EJEI,CIFD,AJEEK,IIFEiB,UJEN,CAAmBlB,GAAnB,CAAJ,EAA6B,EIFvB,CAAUmB,eAAV,CAAd;AHDI,ADIQ,UAAI,KGGDA,ACLA4B,GJEQnD,GAAG,CAACI,GCJT,ADIQ,CAAV,MAAoB,QAApB,IAAgCJ,GAAG,CAACI,GAAD,CAAH,KAAa,IAAjD,EAAuD;ACJjD,AISlBiD,ALJgBpD,OKIT,CAACqD,ALJQrD,GKIhB,CAAYkD,ELJU,CAAC/C,GAAD,CAAN,GAAcL,IKI9B,EAAmB,GLJoB,CAACC,GAAG,CAACI,EKI5C,CLJ2C,CAAJ,CAAvB;AACH,OAFD,MAEO;ACLX,AISR+C,ALHgBlD,QAAAA,CCNHiB,KDMS,CKGhBqC,ALHiBnD,ECNf,CISR,ALHsB,CKGZ,ALHM,CCNQ,EAAhB,AISR,ALH8BJ,EKGf,CLHkB,CAACI,GAAD,CAAjB;ACLX,AISD2C,ALHS,EKGTA,OAAO,EAAE,uBADE;AAEXG,ALFK,EKELA,EHXE5B,KGWK,EAAE;AHVT,AGWI,iBHXQC,MAAZ,AGWuB,EHXJ;AAAA,AGUV,ALFJ;AKAM,ALCV,CKDL,EAOKY,IAPL,CAOU,UAAAE,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","file":"axios.80dfb952.js","sourceRoot":"../client","sourcesContent":["export const deepClone = function (obj) {\n    let target = Array.isArray(obj) ? [] : {};\n   \n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (typeof obj[key] === 'object' && obj[key] !== null) {\n                target[key] = deepClone(obj[key]);\n            } else {\n                target[key] = obj[key]\n            }\n                \n        };\n    }\n   \n    return target;\n}\nexport const mergeConfig = function (baseConfig,instanceConfig) {\n    let baseConf = deepClone(baseConfig);\n    let instanceConf = deepClone(instanceConfig);\n    Object.keys(instanceConf).reduce((prev, key) => {\n        // 将某些基础的配置合并\n        if (['headers'].includes(key)) {\n            prev[key] = Object.assign(baseConf[key],instanceConf[key])\n        }\n        // 将某些基础的配置覆盖\n        if (['url', 'baseUrl', 'method'].includes(key)) {\n            prev[key] = instanceConf[key]\n        }\n        return prev;\n    },baseConf)\n    return baseConf;\n }","export default class Intercepter {\n    constructor() {\n        this.handlers = [];\n    }\n    use (resHandler,rejHandler) {\n        this.handlers.push({\n            resHandler,\n            rejHandler\n        })\n    }\n}","import { deepClone ,mergeConfig} from '../utils/deepCopy';\nimport Intercepter from './intercepter';\nclass Axios {\n    constructor(config){\n        this.defaultsConfigs = deepClone(config);\n        this.intercepter = {\n            request: new Intercepter(),\n            response: new Intercepter()\n        }\n    }\n  \n    get (url, config) {\n    /*\n         将get传入的参数config和实例化对象的时候传入的config进行整合\n        \n    */  \n   let assginConfigs = mergeConfig(this.defaultsConfigs, config);\n   config.url = url;\n    /**\n     *  issue ： 啥时候调用use方法；\n     *           调用use方法存在哪些问题\n     *           为啥要使用promise去调用\n     * \n     *  \n     */\n        let promise = Promise.resolve(assginConfigs);\n    /** 请求拦截器 */\n    this.intercepter.request.handlers.forEach(handler => {\n        promise = promise.then(handler.resHandler,handler.rejHandler)\n    })\n    // promise.resolve成功的函数立即执行 将参数assginConfigs 传递给promise.then里面成功的回调函数request；\n    // request 返回一个promise对象， 方便后续继续使用get方法的时候可以.then方法；\n    // promise.then 总是找上一个距离自己最近的promise对象去执行里面的res, rej方法\n    // \n    /** 发送请求的方法 */\n    promise = promise.then(this.request, undefined)\n    /** 响应拦截器 */\n    this.intercepter.response.handlers.forEach(handler => {\n        promise = promise.then(handler.resHandler,handler.rejHandler)\n    })    \n    return promise;\n      \n    }\n    request (config) {\n        return new Promise((res, rej) => {\n            let xhr = new XMLHttpRequest();\n            xhr.onload = function () {\n                if (xhr.response) {\n                    let obj = {\n                        statusCode: xhr.statusCode,\n                        statusText: xhr.statusText,\n                        data: xhr.responseText\n                    }\n                    res(obj)\n                } else {\n                    rej()\n                }\n                \n            };\n            xhr.open('get', config.baseUrl + config.url, true);\n            xhr.send();\n            })\n    }\n}\n\nexport default Axios;","const config = {\n    baseUrl: '',\n    url: '',\n    method: 'get',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}\nexport default config;","import Axios from './classAxios';\nimport config from './config.js';\nconst axios = new Axios(config);\nexport default axios;","/**\n *  引入自定义的axios类，完成数据请求 的发送\n */\nimport axios from './axios';\n\naxios.intercepter.request.use(function (config) {\n    return config;\n}, function () {\n    console.log('err in axios intercepter request');\n})\nconsole.log(axios, '12121212');\naxios.get('/', {\n    baseUrl: \"http://localhost:8888\",\n    headers: {\n        'instance-header': 'give me a pow'\n    }\n    \n})\n    .then(res => {\n    console.log( res,'client get server  data');\n})"]}